[main]

# Let's use some in-memory caching to reduce the number of runtime lookups against Stormpath.
# A real application might want to use a more robust caching solution (e.g. ehcache or a
# distributed cache).  When using such caches, be aware of your cache TTL settings: too high
# a TTL and the cache won't reflect any potential changes in Stormpath fast enough.  Too low
# and the cache could evict too often, reducing performance.
cacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
securityManager.cacheManager = $cacheManager
shiro.loginUrl = app/jsp/index.jsp

jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.permissionsLookupEnabled = true

jdbcRealm.authenticationQuery = "SELECT PASSWORD FROM USER_CREDENTIALS WHERE USER_NAME = ?"
jdbcRealm.userRolesQuery = "SELECT authority FROM user_roles WHERE username = ?"

ds = com.sun.sql.jdbcx.sqlserver.SQLServerDataSource
ds.serverName = localhost
ds.user = sa
ds.password = Passw0rd
ds.databaseName = Innovation_Portal
jdbcRealm.dataSource = $ds
 
#sha256Matcher = org.apache.shiro.authc.credential.Sha256CredentialsMatcher
#jdbcRealm.credentialsMatcher = $sha256Matcher

# enable matcher in iniRealm (object responsible for authentication)
#iniRealm.credentialsMatcher = $sha256Matcher 
 
[users]

[roles]


[urls]

